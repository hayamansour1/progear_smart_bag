import 'package:flutter/material.dart';

class ProGearBackground extends StatelessWidget {
  final Widget child;
  final bool showGrid;
  final bool vignette;

  const ProGearBackground({
    super.key,
    required this.child,
    this.showGrid = true,
    this.vignette = true,
  });

  @override
  Widget build(BuildContext context) {
    return Stack(
      children: [
        // قاعدة داكنة صحيحة (#121212)
        const Positioned.fill(
          child: ColoredBox(color: Color(0xFF121212)),
        ),

        // وهج علوي-أيسر (أزرق فاتح)
        Positioned(
          left: -120,
          top: -160,
          child: Container(
            width: 460,
            height: 460,
            decoration: BoxDecoration(
              shape: BoxShape.circle,
              gradient: RadialGradient(
                colors: [
                  const Color(0xFF338ACA).withValues(alpha: 0.35),
                  const Color(0xFF0A0F1A).withValues(alpha: 0.0),
                ],
                stops: const [0.0, 1.0],
              ),
              boxShadow: [
                BoxShadow(
                  color: const Color(0xFF338ACA).withValues(alpha: 0.45),
                  blurRadius: 220,
                  spreadRadius: 120,
                )
              ],
            ),
          ),
        ),

        // وهج سفلي-أيمن (أزرق أساسي 294BC7)
        Positioned(
          right: -160,
          bottom: -200,
          child: Container(
            width: 560,
            height: 560,
            decoration: BoxDecoration(
              shape: BoxShape.circle,
              gradient: RadialGradient(
                colors: [
                  const Color(0xFF294BC7).withValues(alpha: 0.40),
                  const Color(0xFF0A0F1A).withValues(alpha: 0.0),
                ],
                stops: const [0.0, 1.0],
              ),
              boxShadow: [
                BoxShadow(
                  color: const Color(0xFF294BC7).withValues(alpha: 0.55),
                  blurRadius: 280,
                  spreadRadius: 160,
                )
              ],
            ),
          ),
        ),

        // فينييت خفيّ يلمّ الأطراف (اختياري)
        if (vignette)
          Positioned.fill(
            child: DecoratedBox(
              decoration: BoxDecoration(
                gradient: RadialGradient(
                  center: Alignment.center,
                  radius: 1.1,
                  colors: [
                    Colors.transparent,
                    Colors.black.withValues(alpha: 0.12),
                  ],
                  stops: const [0.78, 1.0],
                ),
              ),
            ),
          ),

        // شبكة خطوط خفيفة مثل Figma (اختياري)
        if (showGrid)
          Positioned.fill(
            child: IgnorePointer(
              child: CustomPaint(
                painter: _GridPainter(
                  gap: 88,
                  color: Colors.white.withValues(alpha: 0.06),
                ),
              ),
            ),
          ),

        // المحتوى
        child,
      ],
    );
  }
}

class _GridPainter extends CustomPainter {
  final double gap;
  final Color color;
  const _GridPainter({required this.gap, required this.color});

  @override
  void paint(Canvas canvas, Size size) {
    final paint = Paint()
      ..color = color
      ..strokeWidth = 0.8;

    // خطوط عمودية
    for (double x = 0; x <= size.width; x += gap) {
      canvas.drawLine(Offset(x, 0), Offset(x, size.height), paint);
    }
    // خطوط أفقية
    for (double y = 0; y <= size.height; y += gap) {
      canvas.drawLine(Offset(0, y), Offset(size.width, y), paint);
    }
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) => false;
}
